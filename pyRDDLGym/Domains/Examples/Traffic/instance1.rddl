non-fluents grid_1x3 {
    domain = BLX_model;

    objects {
        intersection : {i0, i1, i2};
        link         : {l-i0-s0, l-i0-i1, l-i0-s6, l-i0-s7, l-i1-s1, l-i1-i2, l-i1-s5, l-i1-i0, l-i2-s2, l-i2-s3, l-i2-s4, l-i2-i1, l-s0-i0, l-s6-i0, l-s1-i1, l-s5-i1, l-s2-i2, l-s4-i2, l-s7-i0, l-s3-i2};
        time         : {t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27};
    };

    non-fluents {
        //sources
        SOURCE(l-s7-i0);
        SOURCE(l-s3-i2);
        SOURCE(l-s0-i0);
        SOURCE(l-s6-i0);
        SOURCE(l-s1-i1);
        SOURCE(l-s5-i1);
        SOURCE(l-s2-i2);
        SOURCE(l-s4-i2);
        //sinks
        SINK(l-i0-s7);
        SINK(l-i2-s3);
        SINK(l-i0-s0);
        SINK(l-i0-s6);
        SINK(l-i1-s1);
        SINK(l-i1-s5);
        SINK(l-i2-s2);
        SINK(l-i2-s4);
        //satflow rates
        MU(l-s7-i0,l-i0-i1) = 1.06;
        MU(l-s7-i0,l-i0-s0) = 0.53;
        MU(l-s7-i0,l-i0-s6) = 0.53;
        MU(l-s0-i0,l-i0-i1) = 1.06;
        MU(l-i1-i0,l-i0-s7) = 0.53;
        MU(l-s6-i0,l-i0-i1) = 0.53;
        MU(l-s0-i0,l-i0-s6) = 1.06;
        MU(l-i1-i0,l-i0-s6) = 0.53;
        MU(l-i1-i0,l-i0-s0) = 0.53;
        MU(l-s6-i0,l-i0-s7) = 1.06;
        MU(l-s6-i0,l-i0-s0) = 0.53;
        MU(l-s0-i0,l-i0-s7) = 0.53;
        MU(l-i0-i1,l-i1-s1) = 1.06;
        MU(l-i0-i1,l-i1-i2) = 0.53;
        MU(l-i0-i1,l-i1-s5) = 0.53;
        MU(l-s1-i1,l-i1-i2) = 1.06;
        MU(l-i2-i1,l-i1-i0) = 0.53;
        MU(l-s5-i1,l-i1-i2) = 0.53;
        MU(l-s1-i1,l-i1-s5) = 1.06;
        MU(l-i2-i1,l-i1-s5) = 0.53;
        MU(l-i2-i1,l-i1-s1) = 0.53;
        MU(l-s5-i1,l-i1-s1) = 1.06;
        MU(l-s5-i1,l-i1-i0) = 0.53;
        MU(l-s1-i1,l-i1-i0) = 0.53;
        MU(l-i1-i2,l-i2-s3) = 1.06;
        MU(l-i1-i2,l-i2-s2) = 0.53;
        MU(l-i1-i2,l-i2-s4) = 0.53;
        MU(l-s3-i2,l-i2-i1) = 1.06;
        MU(l-s2-i2,l-i2-s3) = 0.53;
        MU(l-s4-i2,l-i2-s3) = 0.53;
        MU(l-s2-i2,l-i2-s4) = 1.06;
        MU(l-s3-i2,l-i2-s4) = 0.53;
        MU(l-s3-i2,l-i2-s2) = 0.53;
        MU(l-s4-i2,l-i2-i1) = 1.06;
        MU(l-s4-i2,l-i2-s2) = 0.53;
        MU(l-s2-i2,l-i2-i1) = 0.53;
        //turn probabilities
        BETA(l-s7-i0,l-i0-i1) = 0.6616422986957039;
        BETA(l-s7-i0,l-i0-s0) = 0.18835770130429608;
        BETA(l-s7-i0,l-i0-s6) = 0.15000000000000002;
        BETA(l-s0-i0,l-i0-i1) = 0.6468848158440546;
        BETA(l-i1-i0,l-i0-s7) = 0.20311518415594546;
        BETA(l-s6-i0,l-i0-i1) = 0.15;
        BETA(l-s0-i0,l-i0-s6) = 0.5878042337874564;
        BETA(l-i1-i0,l-i0-s6) = 0.26219576621254354;
        BETA(l-i1-i0,l-i0-s0) = 0.15000000000000008;
        BETA(l-s6-i0,l-i0-s7) = 0.5601683704927639;
        BETA(l-s6-i0,l-i0-s0) = 0.28983162950723607;
        BETA(l-s0-i0,l-i0-s7) = 0.15000000000000002;
        BETA(l-i0-i1,l-i1-s1) = 0.66268961197868;
        BETA(l-i0-i1,l-i1-i2) = 0.18731038802131988;
        BETA(l-i0-i1,l-i1-s5) = 0.15000000000000008;
        BETA(l-s1-i1,l-i1-i2) = 0.514525388967698;
        BETA(l-i2-i1,l-i1-i0) = 0.3354746110323021;
        BETA(l-s5-i1,l-i1-i2) = 0.14999999999999997;
        BETA(l-s1-i1,l-i1-s5) = 0.6587870112428968;
        BETA(l-i2-i1,l-i1-s5) = 0.19121298875710313;
        BETA(l-i2-i1,l-i1-s1) = 0.15000000000000002;
        BETA(l-s5-i1,l-i1-s1) = 0.5807466460137232;
        BETA(l-s5-i1,l-i1-i0) = 0.26925335398627687;
        BETA(l-s1-i1,l-i1-i0) = 0.14999999999999997;
        BETA(l-i1-i2,l-i2-s3) = 0.5752589440502816;
        BETA(l-i1-i2,l-i2-s2) = 0.2747410559497184;
        BETA(l-i1-i2,l-i2-s4) = 0.15000000000000002;
        BETA(l-s3-i2,l-i2-i1) = 0.6756223208786574;
        BETA(l-s2-i2,l-i2-s3) = 0.17437767912134258;
        BETA(l-s4-i2,l-i2-s3) = 0.15000000000000005;
        BETA(l-s2-i2,l-i2-s4) = 0.5767739779416236;
        BETA(l-s3-i2,l-i2-s4) = 0.2732260220583765;
        BETA(l-s3-i2,l-i2-s2) = 0.14999999999999997;
        BETA(l-s4-i2,l-i2-i1) = 0.5816027594345898;
        BETA(l-s4-i2,l-i2-s2) = 0.2683972405654102;
        BETA(l-s2-i2,l-i2-i1) = 0.14999999999999997;
        //link lengths
        Dl(l-i0-s0) = 361.0;
        Dl(l-i0-i1) = 208.0;
        Dl(l-i0-s6) = 361.0;
        Dl(l-i0-s7) = 299.0;
        Dl(l-i1-s1) = 361.0;
        Dl(l-i1-i2) = 170.0;
        Dl(l-i1-s5) = 361.0;
        Dl(l-i1-i0) = 208.0;
        Dl(l-i2-s2) = 361.0;
        Dl(l-i2-s3) = 253.0;
        Dl(l-i2-s4) = 361.0;
        Dl(l-i2-i1) = 170.0;
        Dl(l-s0-i0) = 361.0;
        Dl(l-s6-i0) = 361.0;
        Dl(l-s1-i1) = 361.0;
        Dl(l-s5-i1) = 361.0;
        Dl(l-s2-i2) = 361.0;
        Dl(l-s4-i2) = 361.0;
        Dl(l-s7-i0) = 299.0;
        Dl(l-s3-i2) = 253.0;
        //source arrival rates
        SOURCE-ARRIVAL-RATE(l-s0-i0) = 0.56;
        SOURCE-ARRIVAL-RATE(l-s6-i0) = 0.6;
        SOURCE-ARRIVAL-RATE(l-s1-i1) = 0.5;
        SOURCE-ARRIVAL-RATE(l-s5-i1) = 0.36;
        SOURCE-ARRIVAL-RATE(l-s2-i2) = 0.39;
        SOURCE-ARRIVAL-RATE(l-s4-i2) = 0.26;
        SOURCE-ARRIVAL-RATE(l-s7-i0) = 0.58;
        SOURCE-ARRIVAL-RATE(l-s3-i2) = 0.41;
        
        //intersection i0
        //turns
        TURN(l-i1-i0,l-i0-s0);
        TURN(l-i1-i0,l-i0-s7);
        TURN(l-i1-i0,l-i0-s6);
        TURN(l-s0-i0,l-i0-s7);
        TURN(l-s0-i0,l-i0-s6);
        TURN(l-s0-i0,l-i0-i1);
        TURN(l-s7-i0,l-i0-s6);
        TURN(l-s7-i0,l-i0-i1);
        TURN(l-s7-i0,l-i0-s0);
        TURN(l-s6-i0,l-i0-i1);
        TURN(l-s6-i0,l-i0-s0);
        TURN(l-s6-i0,l-i0-s7);
        //link-to
        LINK-TO(l-i1-i0,i0);
        LINK-TO(l-s0-i0,i0);
        LINK-TO(l-s7-i0,i0);
        LINK-TO(l-s6-i0,i0);
        //link-from
        LINK-FROM(i0,l-i0-i1);
        LINK-FROM(i0,l-i0-s0);
        LINK-FROM(i0,l-i0-s7);
        LINK-FROM(i0,l-i0-s6);
        //phase properties
        PHASE-MIN(i0) = 7;
        PHASE-MAX(i0) = 60;
        PHASE-ALL-RED-DUR(i0) = 4;
        //green turns
        GREEN(l-i1-i0,l-i0-s6,@WEST-EAST-LEFT);
        GREEN(l-s7-i0,l-i0-s0,@WEST-EAST-LEFT);
        GREEN(l-i1-i0,l-i0-s7,@WEST-EAST-THROUGH);
        GREEN(l-s7-i0,l-i0-i1,@WEST-EAST-THROUGH);
        GREEN(l-s0-i0,l-i0-s7,@NORTH-SOUTH-LEFT);
        GREEN(l-s6-i0,l-i0-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-s0-i0,l-i0-s6,@NORTH-SOUTH-THROUGH);
        GREEN(l-s6-i0,l-i0-s0,@NORTH-SOUTH-THROUGH);
        GREEN(l-i1-i0,l-i0-s0,@WEST-EAST-LEFT);
        GREEN(l-i1-i0,l-i0-s0,@WEST-EAST-THROUGH);
        GREEN(l-i1-i0,l-i0-s0,@NORTH-SOUTH-LEFT);
        GREEN(l-i1-i0,l-i0-s0,@NORTH-SOUTH-THROUGH);
        GREEN(l-s0-i0,l-i0-s7,@WEST-EAST-LEFT);
        GREEN(l-s0-i0,l-i0-s7,@WEST-EAST-THROUGH);
        GREEN(l-s0-i0,l-i0-s7,@NORTH-SOUTH-LEFT);
        GREEN(l-s0-i0,l-i0-s7,@NORTH-SOUTH-THROUGH);
        GREEN(l-s7-i0,l-i0-s6,@WEST-EAST-LEFT);
        GREEN(l-s7-i0,l-i0-s6,@WEST-EAST-THROUGH);
        GREEN(l-s7-i0,l-i0-s6,@NORTH-SOUTH-LEFT);
        GREEN(l-s7-i0,l-i0-s6,@NORTH-SOUTH-THROUGH);
        GREEN(l-s6-i0,l-i0-i1,@WEST-EAST-LEFT);
        GREEN(l-s6-i0,l-i0-i1,@WEST-EAST-THROUGH);
        GREEN(l-s6-i0,l-i0-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-s6-i0,l-i0-i1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i1-i0,l-i0-s0,@ALL-RED);
        GREEN(l-i1-i0,l-i0-s0,@ALL-RED2);
        GREEN(l-i1-i0,l-i0-s0,@ALL-RED3);
        GREEN(l-i1-i0,l-i0-s0,@ALL-RED4);
        GREEN(l-s0-i0,l-i0-s7,@ALL-RED);
        GREEN(l-s0-i0,l-i0-s7,@ALL-RED2);
        GREEN(l-s0-i0,l-i0-s7,@ALL-RED3);
        GREEN(l-s0-i0,l-i0-s7,@ALL-RED4);
        GREEN(l-s7-i0,l-i0-s6,@ALL-RED);
        GREEN(l-s7-i0,l-i0-s6,@ALL-RED2);
        GREEN(l-s7-i0,l-i0-s6,@ALL-RED3);
        GREEN(l-s7-i0,l-i0-s6,@ALL-RED4);
        GREEN(l-s6-i0,l-i0-i1,@ALL-RED);
        GREEN(l-s6-i0,l-i0-i1,@ALL-RED2);
        GREEN(l-s6-i0,l-i0-i1,@ALL-RED3);
        GREEN(l-s6-i0,l-i0-i1,@ALL-RED4);
        
        //intersection i1
        //turns
        TURN(l-i2-i1,l-i1-s1);
        TURN(l-i2-i1,l-i1-i0);
        TURN(l-i2-i1,l-i1-s5);
        TURN(l-s1-i1,l-i1-i0);
        TURN(l-s1-i1,l-i1-s5);
        TURN(l-s1-i1,l-i1-i2);
        TURN(l-i0-i1,l-i1-s5);
        TURN(l-i0-i1,l-i1-i2);
        TURN(l-i0-i1,l-i1-s1);
        TURN(l-s5-i1,l-i1-i2);
        TURN(l-s5-i1,l-i1-s1);
        TURN(l-s5-i1,l-i1-i0);
        //link-to
        LINK-TO(l-i2-i1,i1);
        LINK-TO(l-s1-i1,i1);
        LINK-TO(l-i0-i1,i1);
        LINK-TO(l-s5-i1,i1);
        //link-from
        LINK-FROM(i1,l-i1-i2);
        LINK-FROM(i1,l-i1-s1);
        LINK-FROM(i1,l-i1-i0);
        LINK-FROM(i1,l-i1-s5);
        //phase properties
        PHASE-MIN(i1) = 7;
        PHASE-MAX(i1) = 60;
        PHASE-ALL-RED-DUR(i1) = 4;
        //green turns
        GREEN(l-i2-i1,l-i1-s5,@WEST-EAST-LEFT);
        GREEN(l-i0-i1,l-i1-s1,@WEST-EAST-LEFT);
        GREEN(l-i2-i1,l-i1-i0,@WEST-EAST-THROUGH);
        GREEN(l-i0-i1,l-i1-i2,@WEST-EAST-THROUGH);
        GREEN(l-s1-i1,l-i1-i0,@NORTH-SOUTH-LEFT);
        GREEN(l-s5-i1,l-i1-i2,@NORTH-SOUTH-LEFT);
        GREEN(l-s1-i1,l-i1-s5,@NORTH-SOUTH-THROUGH);
        GREEN(l-s5-i1,l-i1-s1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i2-i1,l-i1-s1,@WEST-EAST-LEFT);
        GREEN(l-i2-i1,l-i1-s1,@WEST-EAST-THROUGH);
        GREEN(l-i2-i1,l-i1-s1,@NORTH-SOUTH-LEFT);
        GREEN(l-i2-i1,l-i1-s1,@NORTH-SOUTH-THROUGH);
        GREEN(l-s1-i1,l-i1-i0,@WEST-EAST-LEFT);
        GREEN(l-s1-i1,l-i1-i0,@WEST-EAST-THROUGH);
        GREEN(l-s1-i1,l-i1-i0,@NORTH-SOUTH-LEFT);
        GREEN(l-s1-i1,l-i1-i0,@NORTH-SOUTH-THROUGH);
        GREEN(l-i0-i1,l-i1-s5,@WEST-EAST-LEFT);
        GREEN(l-i0-i1,l-i1-s5,@WEST-EAST-THROUGH);
        GREEN(l-i0-i1,l-i1-s5,@NORTH-SOUTH-LEFT);
        GREEN(l-i0-i1,l-i1-s5,@NORTH-SOUTH-THROUGH);
        GREEN(l-s5-i1,l-i1-i2,@WEST-EAST-LEFT);
        GREEN(l-s5-i1,l-i1-i2,@WEST-EAST-THROUGH);
        GREEN(l-s5-i1,l-i1-i2,@NORTH-SOUTH-LEFT);
        GREEN(l-s5-i1,l-i1-i2,@NORTH-SOUTH-THROUGH);
        GREEN(l-i2-i1,l-i1-s1,@ALL-RED);
        GREEN(l-i2-i1,l-i1-s1,@ALL-RED2);
        GREEN(l-i2-i1,l-i1-s1,@ALL-RED3);
        GREEN(l-i2-i1,l-i1-s1,@ALL-RED4);
        GREEN(l-s1-i1,l-i1-i0,@ALL-RED);
        GREEN(l-s1-i1,l-i1-i0,@ALL-RED2);
        GREEN(l-s1-i1,l-i1-i0,@ALL-RED3);
        GREEN(l-s1-i1,l-i1-i0,@ALL-RED4);
        GREEN(l-i0-i1,l-i1-s5,@ALL-RED);
        GREEN(l-i0-i1,l-i1-s5,@ALL-RED2);
        GREEN(l-i0-i1,l-i1-s5,@ALL-RED3);
        GREEN(l-i0-i1,l-i1-s5,@ALL-RED4);
        GREEN(l-s5-i1,l-i1-i2,@ALL-RED);
        GREEN(l-s5-i1,l-i1-i2,@ALL-RED2);
        GREEN(l-s5-i1,l-i1-i2,@ALL-RED3);
        GREEN(l-s5-i1,l-i1-i2,@ALL-RED4);
        
        //intersection i2
        //turns
        TURN(l-s3-i2,l-i2-s2);
        TURN(l-s3-i2,l-i2-i1);
        TURN(l-s3-i2,l-i2-s4);
        TURN(l-s2-i2,l-i2-i1);
        TURN(l-s2-i2,l-i2-s4);
        TURN(l-s2-i2,l-i2-s3);
        TURN(l-i1-i2,l-i2-s4);
        TURN(l-i1-i2,l-i2-s3);
        TURN(l-i1-i2,l-i2-s2);
        TURN(l-s4-i2,l-i2-s3);
        TURN(l-s4-i2,l-i2-s2);
        TURN(l-s4-i2,l-i2-i1);
        //link-to
        LINK-TO(l-s3-i2,i2);
        LINK-TO(l-s2-i2,i2);
        LINK-TO(l-i1-i2,i2);
        LINK-TO(l-s4-i2,i2);
        //link-from
        LINK-FROM(i2,l-i2-s3);
        LINK-FROM(i2,l-i2-s2);
        LINK-FROM(i2,l-i2-i1);
        LINK-FROM(i2,l-i2-s4);
        //phase properties
        PHASE-MIN(i2) = 7;
        PHASE-MAX(i2) = 60;
        PHASE-ALL-RED-DUR(i2) = 4;
        //green turns
        GREEN(l-s3-i2,l-i2-s4,@WEST-EAST-LEFT);
        GREEN(l-i1-i2,l-i2-s2,@WEST-EAST-LEFT);
        GREEN(l-s3-i2,l-i2-i1,@WEST-EAST-THROUGH);
        GREEN(l-i1-i2,l-i2-s3,@WEST-EAST-THROUGH);
        GREEN(l-s2-i2,l-i2-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-s4-i2,l-i2-s3,@NORTH-SOUTH-LEFT);
        GREEN(l-s2-i2,l-i2-s4,@NORTH-SOUTH-THROUGH);
        GREEN(l-s4-i2,l-i2-s2,@NORTH-SOUTH-THROUGH);
        GREEN(l-s3-i2,l-i2-s2,@WEST-EAST-LEFT);
        GREEN(l-s3-i2,l-i2-s2,@WEST-EAST-THROUGH);
        GREEN(l-s3-i2,l-i2-s2,@NORTH-SOUTH-LEFT);
        GREEN(l-s3-i2,l-i2-s2,@NORTH-SOUTH-THROUGH);
        GREEN(l-s2-i2,l-i2-i1,@WEST-EAST-LEFT);
        GREEN(l-s2-i2,l-i2-i1,@WEST-EAST-THROUGH);
        GREEN(l-s2-i2,l-i2-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-s2-i2,l-i2-i1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i1-i2,l-i2-s4,@WEST-EAST-LEFT);
        GREEN(l-i1-i2,l-i2-s4,@WEST-EAST-THROUGH);
        GREEN(l-i1-i2,l-i2-s4,@NORTH-SOUTH-LEFT);
        GREEN(l-i1-i2,l-i2-s4,@NORTH-SOUTH-THROUGH);
        GREEN(l-s4-i2,l-i2-s3,@WEST-EAST-LEFT);
        GREEN(l-s4-i2,l-i2-s3,@WEST-EAST-THROUGH);
        GREEN(l-s4-i2,l-i2-s3,@NORTH-SOUTH-LEFT);
        GREEN(l-s4-i2,l-i2-s3,@NORTH-SOUTH-THROUGH);
        GREEN(l-s3-i2,l-i2-s2,@ALL-RED);
        GREEN(l-s3-i2,l-i2-s2,@ALL-RED2);
        GREEN(l-s3-i2,l-i2-s2,@ALL-RED3);
        GREEN(l-s3-i2,l-i2-s2,@ALL-RED4);
        GREEN(l-s2-i2,l-i2-i1,@ALL-RED);
        GREEN(l-s2-i2,l-i2-i1,@ALL-RED2);
        GREEN(l-s2-i2,l-i2-i1,@ALL-RED3);
        GREEN(l-s2-i2,l-i2-i1,@ALL-RED4);
        GREEN(l-i1-i2,l-i2-s4,@ALL-RED);
        GREEN(l-i1-i2,l-i2-s4,@ALL-RED2);
        GREEN(l-i1-i2,l-i2-s4,@ALL-RED3);
        GREEN(l-i1-i2,l-i2-s4,@ALL-RED4);
        GREEN(l-s4-i2,l-i2-s3,@ALL-RED);
        GREEN(l-s4-i2,l-i2-s3,@ALL-RED2);
        GREEN(l-s4-i2,l-i2-s3,@ALL-RED3);
        GREEN(l-s4-i2,l-i2-s3,@ALL-RED4);
        // time-delay properties
        TIME-HEAD(t0);
        TIME-TAIL(t27);
        TIME-VAL(t0) = 0;
        TIME-VAL(t1) = 1;
        TIME-VAL(t2) = 2;
        TIME-VAL(t3) = 3;
        TIME-VAL(t4) = 4;
        TIME-VAL(t5) = 5;
        TIME-VAL(t6) = 6;
        TIME-VAL(t7) = 7;
        TIME-VAL(t8) = 8;
        TIME-VAL(t9) = 9;
        TIME-VAL(t10) = 10;
        TIME-VAL(t11) = 11;
        TIME-VAL(t12) = 12;
        TIME-VAL(t13) = 13;
        TIME-VAL(t14) = 14;
        TIME-VAL(t15) = 15;
        TIME-VAL(t16) = 16;
        TIME-VAL(t17) = 17;
        TIME-VAL(t18) = 18;
        TIME-VAL(t19) = 19;
        TIME-VAL(t20) = 20;
        TIME-VAL(t21) = 21;
        TIME-VAL(t22) = 22;
        TIME-VAL(t23) = 23;
        TIME-VAL(t24) = 24;
        TIME-VAL(t25) = 25;
        TIME-VAL(t26) = 26;
        TIME-VAL(t27) = 27;
        NEXT(t0,t1);
        NEXT(t1,t2);
        NEXT(t2,t3);
        NEXT(t3,t4);
        NEXT(t4,t5);
        NEXT(t5,t6);
        NEXT(t6,t7);
        NEXT(t7,t8);
        NEXT(t8,t9);
        NEXT(t9,t10);
        NEXT(t10,t11);
        NEXT(t11,t12);
        NEXT(t12,t13);
        NEXT(t13,t14);
        NEXT(t14,t15);
        NEXT(t15,t16);
        NEXT(t16,t17);
        NEXT(t17,t18);
        NEXT(t18,t19);
        NEXT(t19,t20);
        NEXT(t20,t21);
        NEXT(t21,t22);
        NEXT(t22,t23);
        NEXT(t23,t24);
        NEXT(t24,t25);
        NEXT(t25,t26);
        NEXT(t26,t27);
        //cartesian coordinates (for visualization)
        X(i0) = 299.0; Y(i0) = 361.0;
        X(i1) = 507.0; Y(i1) = 361.0;
        X(i2) = 677.0; Y(i2) = 361.0;
        SOURCE-X(l-s7-i0) = 0.0; SOURCE-Y(l-s7-i0) = 361.0;
        SOURCE-X(l-s3-i2) = 930.0; SOURCE-Y(l-s3-i2) = 361.0;
        SINK-X(l-i0-s7) = 0.0; SINK-Y(l-i0-s7) = 361.0;
        SINK-X(l-i2-s3) = 930.0; SINK-Y(l-i2-s3) = 361.0;
        SOURCE-X(l-s0-i0) = 299.0; SOURCE-Y(l-s0-i0) = 722.0;
        SOURCE-X(l-s6-i0) = 299.0; SOURCE-Y(l-s6-i0) = 0.0;
        SINK-X(l-i0-s0) = 299.0; SINK-Y(l-i0-s0) = 722.0;
        SINK-X(l-i0-s6) = 299.0; SINK-Y(l-i0-s6) = 0.0;
        SOURCE-X(l-s1-i1) = 507.0; SOURCE-Y(l-s1-i1) = 722.0;
        SOURCE-X(l-s5-i1) = 507.0; SOURCE-Y(l-s5-i1) = 0.0;
        SINK-X(l-i1-s1) = 507.0; SINK-Y(l-i1-s1) = 722.0;
        SINK-X(l-i1-s5) = 507.0; SINK-Y(l-i1-s5) = 0.0;
        SOURCE-X(l-s2-i2) = 677.0; SOURCE-Y(l-s2-i2) = 722.0;
        SOURCE-X(l-s4-i2) = 677.0; SOURCE-Y(l-s4-i2) = 0.0;
        SINK-X(l-i2-s2) = 677.0; SINK-Y(l-i2-s2) = 722.0;
        SINK-X(l-i2-s4) = 677.0; SINK-Y(l-i2-s4) = 0.0;
    };
}

instance grid_1x3 {
    domain = BLX_model;
    non-fluents = grid_1x3;
    max-nondef-actions = 3;
    horizon = 200;
    discount = 1.0;
}
